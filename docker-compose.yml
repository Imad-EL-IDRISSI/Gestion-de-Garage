services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    networks:
      - my-network
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Discovery Service (Eureka Server)
  discovery-service:
    image: discovery-service:1.0.0
    networks:
      - my-network
    build:
      context: ./discovery-service
    container_name: discovery-service-container
    ports:
      - '8761:8761'
    expose:
      - '8761'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      retries: 4
      timeout: 5s


  # Config Service
  config-service:
    image: config-service
    networks:
      - my-network
    build:
      context: ./config-service
    ports:
      - "9999:9999"
    expose:
      - '9999'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9999/actuator/health" ]
      interval: 10s
      retries: 4
    environment:
      DISCOVERY_SERVICE_URL: http://discovery-service-container:8761/eureka
    depends_on:
      discovery-service:
        condition: service_healthy

   #Gateway Service
  gateway-service:
       image: gateway-service
       networks:
         - my-network
       build:
         context: ./gateway-service
       ports:
         - "8888:8888"
       expose:
         - '8888'
       environment:
         DISCOVERY_SERVICE_URL: http://discovery-service-container:8761/eureka
         CONFIG_SERVICE_URL: http://microservice-openfeign-config-service-1:9999
       depends_on:
         config-service:
           condition: service_healthy



    # Commented out services below:

  client-service:
    image: client-service
    container_name: client-service-container
    networks:
      - my-network
    build:
      context: ./client-service
    ports:
      - "8081:8081"
    expose:
      - '8081'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 10s
      retries: 4
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/client
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      DISCOVERY_SERVICE_URL: http://discovery-service-container:8761/eureka
      CONFIG_SERVICE_URL: http://microservice-openfeign-config-service-1:9999
    depends_on:
      - config-service
      - postgres

  vehicule-service:
    image: vehicule-service
    networks:
      - my-network
    build:
      context: ./vehicule-service
    ports:
      - "8082:8082"
    expose:
      - '8082'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 10s
      retries: 4
    environment:
       SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/vehicule
       SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
       SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
       DISCOVERY_SERVICE_URL: http://discovery-service-container:8761/eureka
       CONFIG_SERVICE_URL: http://microservice-openfeign-config-service-1:9999
    depends_on:
      - client-service
      - postgres

  maintenance-service:
    image: maintenance-service
    networks:
      - my-network
    build:
      context: ./maintenance-service
    ports:
      - "8083:8083"
    expose:
      - '8083'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 10s
      retries: 4
    environment:
       SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/maintenance
       SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
       SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
       DISCOVERY_SERVICE_URL: http://discovery-service-container:8761/eureka
       CONFIG_SERVICE_URL: http://microservice-openfeign-config-service-1:9999
    depends_on:
      vehicule-service:
        condition: service_healthy

  notification-service:
    image: notification-service
    networks:
      - my-network
    build:
      context: ./notification-service
    ports:
      - "8084:8084"
    expose:
      - '8084'
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/notifications
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      DISCOVERY_SERVICE_URL: http://discovery-service-container:8761/eureka
      CONFIG_SERVICE_URL: http://microservice-openfeign-config-service-1:9999
      SPRING_MAIL_USERNAME: ouaquarouadie@gmail.com
      SPRING_MAIL_PASSWORD: qfim_ardz_qrmt_pkma
    depends_on:
      maintenance-service:
        condition: service_healthy

  facture-service:
    image: facture-service
    networks:
      - my-network
    build:
      context: ./facture-service
    ports:
      - "8085:8085"
    expose:
      - '8085'
    environment:
       SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/factures
       SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
       SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
       DISCOVERY_SERVICE_URL: http://discovery-service-container:8761/eureka
       CONFIG_SERVICE_URL: http://microservice-openfeign-config-service-1:9999
       SPRING_MAIL_USERNAME: ouaquarouadie@gmail.com
       SPRING_MAIL_PASSWORD: odag_rpdh_fhuo_dtou
    depends_on:
      maintenance-service:
        condition: service_healthy

  garage-front:
      build:
        context: ./garage-front
      container_name: frontend-container
      networks:
        - my-network
      ports:
        - "3000:3000"
      stdin_open: true
      depends_on:
        - facture-service


volumes:
    postgres_data:

networks:
    my-network:
      driver: bridge
